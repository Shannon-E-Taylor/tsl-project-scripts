text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "0.15", mu, "g/", mu, "L")),
expression(paste(italic("Ph- "), "0.16", mu, "g/", mu, "L")),
expression(paste(italic("clos- "), "0.26", mu, "g/", mu, "L"))
)
)
#needs sizing etc fixed.
p
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(185, 200),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "1.0", mu, "g/", mu, "L")),
expression(paste(italic("Nr- "), "0.15", mu, "g/", mu, "L")),
expression(paste(italic("Ph- "), "0.16", mu, "g/", mu, "L")),
expression(paste(italic("clos- "), "0.26", mu, "g/", mu, "L"))
)
)
#needs sizing etc fixed.
p
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(185, 200),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "1.0 ", mu, "g/", mu, "L")),
expression(paste(italic("Nr- "), "0.15 ", mu, "g/", mu, "L")),
expression(paste(italic("Ph- "), "0.16 ", mu, "g/", mu, "L")),
expression(paste(italic("clos- "), "0.26 ", mu, "g/", mu, "L"))
)
)
#needs sizing etc fixed.
p
getwd()
?ggsvae
?ggsave
ggsave(p, filename = "Nr-assay-final.png", path = "Documents/tsl-project/", width = 200, height = 75, units = "mm", dpi = 600 )
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(195, 210),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "1.0 ", mu, "g/", mu, "L")),
expression(paste(italic("Nr- "), "0.15 ", mu, "g/", mu, "L")),
expression(paste(italic("Ph- "), "0.16 ", mu, "g/", mu, "L")),
expression(paste(italic("clos- "), "0.26 ", mu, "g/", mu, "L"))
)
)
#needs sizing etc fixed.
p
ggsave(p, filename = "Nr-assay-final.png", path = "Documents/tsl-project/", width = 200, height = 75, units = "mm", dpi = 600 )
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(195, 220),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "1.0 ", mu, "g/", mu, "L")),
expression(paste(italic("Nr- "), "0.15 ", mu, "g/", mu, "L")),
expression(paste(italic("Ph- "), "0.16 ", mu, "g/", mu, "L")),
expression(paste(italic("clos- "), "0.26 ", mu, "g/", mu, "L"))
)
)
#needs sizing etc fixed.
p
ggsave(p, filename = "Nr-assay-final.png", path = "Documents/tsl-project/", width = 200, height = 75, units = "mm", dpi = 600 )
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(195, 225),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "1.0 ", mu, "g/", mu, "L")),
expression(paste(italic("Nr- "), "0.15 ", mu, "g/", mu, "L")),
expression(paste(italic("Ph- "), "0.16 ", mu, "g/", mu, "L")),
expression(paste(italic("clos- "), "0.26 ", mu, "g/", mu, "L"))
)
)
#needs sizing etc fixed.
p
ggsave(p, filename = "Nr-assay-final.png", path = "Documents/tsl-project/", width = 200, height = 75, units = "mm", dpi = 600 )
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(195, 225),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "high concentration")),
expression(paste(italic("Nr- "), "low concentration")),
expression(paste(italic("Ph- "), "low concentration")),
expression(paste(italic("clos- "), "low concentration"))
)
)
#needs sizing etc fixed.
p
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(195, 225),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "high con.")),
expression(paste(italic("Nr- "), "low con.")),
expression(paste(italic("Ph- "), "low con.")),
expression(paste(italic("clos- "), "low con."))
)
)
#needs sizing etc fixed.
p
ggsave(p, filename = "Nr-assay-final.png", path = "Documents/tsl-project/", width = 200, height = 80, units = "mm", dpi = 600 )
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(195, 225),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "high con.")),
expression(paste(italic("Nr- "), "low con.")),
expression(paste(italic("Ph- "), "low con.")),
expression(paste(italic("clos- "), "low con."))
)
) + theme(legend.position = "below")
#needs sizing etc fixed.
p
ggsave(p, filename = "Nr-assay-final.png", path = "Documents/tsl-project/", width = 200, height = 80, units = "mm", dpi = 600 )
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(195, 225),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "high con.")),
expression(paste(italic("Nr- "), "low con.")),
expression(paste(italic("Ph- "), "low con.")),
expression(paste(italic("clos- "), "low con."))
)
) + theme(legend.position = "bottom")
#needs sizing etc fixed.
p
ggsave(p, filename = "Nr-assay-final.png", path = "Documents/tsl-project/", width = 200, height = 80, units = "mm", dpi = 600 )
p <- ggbarplot(nr_assay2, x = "gene", y = "embryos", fill = "class",
position = position_dodge(0.8),
palette = "Paired",
label = TRUE,
xlab = "Gene knocked down",
ylab = "Total no. embryos",
#          lab.pos = "in",
lab.size= 3) +
geom_signif(xmin = c(0.9, 0.9),
xmax = c(2.1, 3.1),
annotation=c("**", "**"),
y_position = c(195, 225),
tip_length = 0) +
theme(legend.title = element_blank(),
text=element_text(size=10)) +
scale_x_discrete(labels=c(expression(italic("egfp-")),
expression(italic("tsl-")),
expression(italic("Nr:tsl-")),
#"egfp", "tsl-", "nr:tsl",
expression(paste(italic("Nr- "), "high con.")),
expression(paste(italic("Nr- "), "low con.")),
expression(paste(italic("Ph- "), "low con.")),
expression(paste(italic("clos- "), "low con."))
)
) + theme(legend.position = "right")
#needs sizing etc fixed.
p
ggsave(p, filename = "Nr-assay-final.png", path = "Documents/tsl-project/", width = 200, height = 80, units = "mm", dpi = 600 )
knitr::opts_chunk$set(echo = FALSE, message = FALSE)
library("ggplot2")
library("data.table")
library("textclean")
library("ggmap")
library("maps")
library("mapdata")
library("plyr")
library("knitr")
```{r}
head(dat)
d <- dat[as.Date(dat$binned_year) >= "2014-01-01"]
d
dat.copy <- na.omit(dat)
dat.copy <- dat.copy[dat.copy$binned_year >= "2014-01-01"]
#work out how to exclude multiple
dat.copy <- dat.copy[dat.copy$location != "UK"]
dat.copy <- dat.copy[dat.copy$location != "england"]
dat.copy <- dat.copy[dat.copy$location != "United Kingdom"]
dat.copy <- dat.copy[dat.copy$location != "England, United Kingdom"]
ggmap(map.watercolor) +
geom_point(data = dat.copy,
aes(y = latlon.lat, x = latlon.lon),
alpha = 0.1, size = 0.5) +
facet_wrap( ~ binned_year,
drop = TRUE) +
theme_void() +
#zoom in on UK slightly
scale_x_continuous(limits = c(-12, 3)) +
scale_y_continuous(limits = c(50, 59))
# theme(axis.line=element_blank(),axis.text.x=element_blank(),
#           axis.text.y=element_blank(),axis.ticks=element_blank(),
#           axis.title.x=element_blank(),
#           axis.title.y=element_blank(),legend.position="none",
#           panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
#           panel.grid.minor=element_blank(),plot.background=element_blank())
#date to year only
dat.copy$binned_year <- format(as.Date(dat.copy$binned_year, format = "%d/%m/%Y"), "%Y")
dat.copy <- na.omit(dat)
dat.copy <- dat.copy[dat.copy$binned_year >= "2014-01-01"]
#date to year only
dat.copy$binned_year <- format(as.Date(dat.copy$binned_year, format = "%d/%m/%Y"), "%Y")
#work out how to exclude multiple
dat.copy <- dat.copy[dat.copy$location != "UK"]
dat.copy <- dat.copy[dat.copy$location != "england"]
dat.copy <- dat.copy[dat.copy$location != "United Kingdom"]
dat.copy <- dat.copy[dat.copy$location != "England, United Kingdom"]
ggmap(map.watercolor) +
geom_point(data = dat.copy,
aes(y = latlon.lat, x = latlon.lon),
alpha = 0.1, size = 0.5) +
facet_wrap( ~ binned_year,
drop = TRUE) +
theme_void() +
#zoom in on UK slightly
scale_x_continuous(limits = c(-12, 3)) +
scale_y_continuous(limits = c(50, 59))
# theme(axis.line=element_blank(),axis.text.x=element_blank(),
#           axis.text.y=element_blank(),axis.ticks=element_blank(),
#           axis.title.x=element_blank(),
#           axis.title.y=element_blank(),legend.position="none",
#           panel.background=element_blank(),panel.border=element_blank(),panel.grid.major=element_blank(),
#           panel.grid.minor=element_blank(),plot.background=element_blank())
dat.copy <- na.omit(dat)
dat.copy <- dat.copy[dat.copy$binned_year >= "2014-01-01"]
#work out how to exclude multiple
dat.copy <- dat.copy[dat.copy$location != "UK"]
dat.copy <- dat.copy[dat.copy$location != "england"]
dat.copy <- dat.copy[dat.copy$location != "United Kingdom"]
dat.copy <- dat.copy[dat.copy$location != "England, United Kingdom"]
ggmap(map.watercolor) +
geom_point(data = dat.copy,
aes(y = latlon.lat, x = latlon.lon),
alpha = 0.1, size = 0.5) +
facet_wrap( ~ binned_year,
drop = TRUE) +
theme_void() +
#zoom in on UK slightly
scale_x_continuous(limits = c(-12, 3)) +
scale_y_continuous(limits = c(50, 59))
#date to year only
dat.copy$binned_year <- format(as.Date(dat.copy$binned_year, format = "%d/%m/%Y"), "%Y")
dat.copy
```{r}
dat.copy <- na.omit(dat)
dat.copy <- dat.copy[dat.copy$binned_year >= "2014-01-01"]
typeof(dat.copy$binned_year)
typeof(as.Date(dat.copy$binned_year))
format(as.Date(dat.copy$binned_year,
format = "%d/%m/%Y")
, "%Y")
dat.copy$binned_year
format(as.Date(dat.copy$binned_year), "%Y")
#date to year only
dat.copy$binned_year <- format(as.Date(dat.copy$binned_year), "%Y")
#work out how to exclude multiple
dat.copy <- dat.copy[dat.copy$location != "UK"]
dat.copy <- dat.copy[dat.copy$location != "england"]
dat.copy <- dat.copy[dat.copy$location != "United Kingdom"]
dat.copy <- dat.copy[dat.copy$location != "England, United Kingdom"]
ggmap(map.watercolor) +
geom_point(data = dat.copy,
aes(y = latlon.lat, x = latlon.lon),
alpha = 0.1, size = 0.5) +
facet_wrap( ~ binned_year,
drop = TRUE) +
theme_void() +
#zoom in on UK slightly
scale_x_continuous(limits = c(-12, 3)) +
scale_y_continuous(limits = c(50, 59))
ggmap(map.watercolor) +
geom_point(data = dat.copy,
aes(y = latlon.lat, x = latlon.lon),
alpha = 0.1, size = 0.5) +
facet_wrap( ~ binned_year,
drop = TRUE,
margins = TRUE) +
theme_void() +
#zoom in on UK slightly
scale_x_continuous(limits = c(-12, 3)) +
scale_y_continuous(limits = c(50, 59))
ggmap(map.watercolor) +
geom_point(data = dat.copy,
aes(y = latlon.lat, x = latlon.lon),
alpha = 0.1, size = 0.5) +
facet_grid( ~ binned_year,
drop = TRUE,
margins = TRUE) +
theme_void() +
#zoom in on UK slightly
scale_x_continuous(limits = c(-12, 3)) +
scale_y_continuous(limits = c(50, 59))
facet_wrap
?facet_wrap
ggmap(map.watercolor) +
geom_point(data = dat.copy,
aes(y = latlon.lat, x = latlon.lon),
alpha = 0.1, size = 0.5) +
facet_grid( ~ binned_year,
drop = TRUE,
margins = TRUE) +
theme_void() +
#zoom in on UK slightly
scale_x_continuous(limits = c(-12, 3)) +
scale_y_continuous(limits = c(50, 59))
unique(dat.copy$location)
?ggmap
?geocode
exclude_locations <- c("UK", "england", "United Kingdom")
dat.copy <- na.omit(dat)
dat.copy <- dat.copy[dat.copy$binned_year >= "2014-01-01"]
unique(dat.copy$location)
filter(dat.copy, location %in% exclude_locations)
filter(dat.copy, dat.copy$location %in% exclude_locations)
filter(dat.copy, dat.copy$location !%in% exclude_locations)
filter(dat.copy, !dat.copy$location %in% exclude_locations)
?filter
filter(dat.copy$location, !dat.copy$location %in% exclude_locations)
?filter
library("dplyr")
filter(dat.copy$location, !dat.copy$location %in% exclude_locations)
filter(dat.copy, !dat.copy$location %in% exclude_locations)
dat.filt <- filter(dat.copy, !dat.copy$location %in% exclude_locations)
unique(dat.filt$location)
exclude_locations <- c("UK", "england", "United Kingdom", "England")
dat.filt <- filter(dat.copy, !dat.copy$location %in% exclude_locations)
unique(dat.filt$location)
exclude_locations <- c("UK", "england", "United Kingdom", "England",
"by the sea")
# Load packages
library(tidyverse)
library(colourlovers)
install.packages("colourlovers")
install.packages("colourlovers")
install.packages("colourlovers_0.2.2")
library(devtools)
install_version("colourlovers", version = "0.2.2")
libary("colourlovers")
library("colourlovers")
# Choose parameters for your flower
exp <- 5     # exponent of the function
ind <- 0.481 # independent term of the function
ite <- 7     # number of iterations
# The function
f <- function(x, y) x^exp + ind
# Reduce approach to iterate
julia <- function (z, n) Reduce(f, rep(1,n), accumulate = FALSE, init = z)
# This is the grid of complex: 3000x3000 between -2 and 2
complex_grid <- outer(seq(-2, 2, length.out = 3000), 1i*seq(-2, 2, length.out = 3000),'+') %>% as.vector()
# Iteration over grid of complex
complex_grid %>% sapply(function(z) julia(z, n=ite)) -> datos
# Pick a top random palette from COLOURLovers
palette <- sample(clpalettes('top'), 1)[[1]] %>% swatch %>% .[[1]] %>% unique() %>% colorRampPalette()
# Build the data frame to do the plt (removing complex with INF modulus)
df <- data_frame(x=Re(complex_grid),
y=Im(complex_grid),
z=Mod(datos)) %>%
filter(is.finite(z)) %>%
mutate(col=cut(z,quantile(z, probs = seq(0, 1, 1/10)), include.lowest = TRUE))
# Limits of the data to frame the drawing
Mx=max(df$x)+0.2
mx=min(df$x)-0.2
My=max(df$y)+0.2
my=min(df$y)-0.2
# Here comes the magic of ggplot
df %>%
ggplot() +
geom_tile(aes(x=x, y=y, fill=col, colour = col)) +
scale_x_continuous(limits = c(mx, Mx), expand=c(0,0))+
scale_y_continuous(limits = c(my, My), expand=c(0,0))+
scale_colour_manual(values=palette(10)) +
theme_void()+
coord_fixed()+
theme(legend.position = "none") -> plot
plot
library("ggplot2")
library("ggsignif")
library("dplyr")
library("gridExtra")
